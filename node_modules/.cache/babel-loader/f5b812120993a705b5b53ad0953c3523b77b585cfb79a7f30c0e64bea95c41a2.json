{"ast":null,"code":"export default {\n  name: 'UserBarks',\n  props: {},\n  data: () => ({\n    user_profile: {},\n    barks: [],\n    has_barks: false\n  }),\n  mounted() {\n    getUserBarks();\n  },\n  methods: {\n    async getUserBarks() {\n      const intId = this.user_id;\n      const Id = intId.toString();\n      const res = await axios.get(`http://localhost:3001/api/userbarked/${Id}`);\n      console.log(res.data);\n      this.user_profile = res.data;\n      this.barks = res.data.barked;\n      console.log(this.barks);\n    }\n  }\n};","map":{"version":3,"mappings":"AAwBA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,CAAC;EACTC,IAAI,EAAE,OAAO;IACXC,YAAY,EAAE,CAAC,CAAC;IAChBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,OAAO,GAAG;IACRC,YAAY,EAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAY,GAAG;MACnB,MAAME,KAAI,GAAI,IAAI,CAACC,OAAM;MACzB,MAAMC,EAAC,GAAIF,KAAK,CAACG,QAAQ,EAAC;MAC1B,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAE,wCAAuCJ,EAAG,EAAC;MACxEK,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACX,IAAI;MACpB,IAAI,CAACC,YAAW,GAAIU,GAAG,CAACX,IAAG;MAC3B,IAAI,CAACE,KAAI,GAAIS,GAAG,CAACX,IAAI,CAACgB,MAAK;MAC3BF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,KAAK;IACxB;EACF;AACF","names":["name","props","data","user_profile","barks","has_barks","mounted","getUserBarks","methods","intId","user_id","Id","toString","res","axios","get","console","log","barked"],"sourceRoot":"","sources":["/Users/jscarpelli/ga_seir919/projects/musical_pursuit/musicial_pursuit_front/musical_pursuit/src/components/UserBarks.vue"],"sourcesContent":["<template>\n  <div class=\"profile-space\">\n    <div class=\"user-info\">\n      <h1>What is your competition saying barking at you?</h1>\n    </div>\n    <div class=\"user-stats\">\n      <h1>{{ user_profile.current_level }}</h1>\n    </div>\n    <div class=\"user-barks\">\n      <h3 class=\"bark-header\">See who is barking at you!</h3>\n      <!-- <div v-if=\"has_barks\"> -->\n      <div class=\"temp\">\n        <div class=\"barks-display\" :key=\"bark.id\" v-for=\"bark in barks\">\n          <h4>Your competitor:{{ bark.handle }}</h4>\n          <h5>Their level:{{ bark.alltime_level }}</h5>\n          <h6>What they had to say to you:</h6>\n          <p>{{ bark.Bark.bark }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserBarks',\n  props: {},\n  data: () => ({\n    user_profile: {},\n    barks: [],\n    has_barks: false\n  }),\n  mounted() {\n    getUserBarks()\n  },\n  methods: {\n    async getUserBarks() {\n      const intId = this.user_id\n      const Id = intId.toString()\n      const res = await axios.get(`http://localhost:3001/api/userbarked/${Id}`)\n      console.log(res.data)\n      this.user_profile = res.data\n      this.barks = res.data.barked\n      console.log(this.barks)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}