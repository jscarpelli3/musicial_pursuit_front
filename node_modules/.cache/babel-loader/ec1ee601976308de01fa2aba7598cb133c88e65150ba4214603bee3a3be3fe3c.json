{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"md-table-cell-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_md_checkbox = _resolveComponent(\"md-checkbox\");\n  const _component_md_table_head = _resolveComponent(\"md-table-head\");\n  return $options.selectableCount ? (_openBlock(), _createBlock(_component_md_table_head, {\n    key: 0,\n    class: \"md-table-cell-selection\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_md_checkbox, {\n      model: $options.allSelected,\n      disabled: $options.isDisabled,\n      onChange: $options.onChange\n    }, null, 8 /* PROPS */, [\"model\", \"disabled\", \"onChange\"])])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAyB;;;;SADeC,wBAAe,kBAApEC,aAIgBC;;IAJDH,KAAK,EAAC;;sBACnB,MAEM,CAFNI,oBAEM,OAFNC,UAEM,GADJC,aAA8EC;MAAhEC,KAAK,EAAEP,oBAAW;MAAGQ,QAAQ,EAAER,mBAAU;MAAGS,QAAM,EAAET","names":["class","$options","_createBlock","_component_md_table_head","_createElementVNode","_hoisted_1","_createVNode","_component_md_checkbox","model","disabled","onChange"],"sourceRoot":"","sources":["/Users/jscarpelli/ga_seir919/projects/musical_pursuit/musicial_pursuit_front/musical_pursuit/src/components/MdTable/MdTableHeadSelection.vue"],"sourcesContent":["<template>\n  <md-table-head class=\"md-table-cell-selection\" v-if=\"selectableCount\">\n    <div class=\"md-table-cell-container\">\n      <md-checkbox :model=\"allSelected\" :disabled=\"isDisabled\" @change=\"onChange\" />\n    </div>\n  </md-table-head>\n</template>\n\n<script>\n  import MdTableHead from './MdTableHead'\n\n  export default {\n    name: 'MdTableHeadSelection',\n    components: {\n      MdTableHead\n    },\n    inject: ['MdTable'],\n    computed: {\n      selectableCount () {\n        return Object.keys(this.selectable).length\n      },\n      isDisabled () {\n        return !this.selectableCount\n      },\n      selectable () {\n        return this.MdTable.selectable\n      },\n      selectedItems () {\n        return this.MdTable.selectedItems\n      },\n      allSelected () {\n        if (this.selectableCount === 0) {\n          return false\n        }\n\n        return this.selectable.every(item => this.selectedItems.includes(item))\n      }\n    },\n    methods: {\n      onChange (val) {\n        if (val) {\n          this.MdTable.selectedItems = this.selectedItems.concat(this.selectable.filter(item => !this.selectedItems.includes(item)))\n        } else {\n          this.MdTable.selectedItems = this.selectedItems.filter(item => !this.selectable.includes(item))\n        }\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}