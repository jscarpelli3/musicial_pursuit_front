{"ast":null,"code":"export default {\n  name: 'QuestionCard',\n  props: {\n    artistAlbumInfo: Object\n  },\n  data: () => ({\n    round_one: 50,\n    round_two: 100,\n    round_three: 150,\n    question: \"\",\n    cur_answer: \"\",\n    cur_artist: artistAlbumInfo.album[0].strArtist\n  }),\n  mounted() {\n    this.createQuestion(4);\n  },\n  methods: {\n    coreectAns(value1, value2) {\n      this.$emit('correct', value1, value2);\n    },\n    incorrectAns() {\n      this.$emit('incorrect');\n    },\n    checkAnswer() {\n      console.log('check answer');\n    },\n    createQuestion(questions) {\n      let albumIdx = Math.floor(Math.random() * this.artistAlbumInfo.album.length);\n      let album = this.artistAlbumInfo.album[albumIdx].strAlbum;\n      let yearInt = this.artistAlbumInfo.album[albumIdx].intYearReleased;\n      let year = yearInt.toString();\n      let questionType = Math.floor(Math.random() * questions);\n      if (questionType === 0) {\n        this.questions = `What year was their album ${album} released?`;\n      } else if (questionType === 1) {\n        this.question = `What album did ${this.cur_artist} release in the year ${year}?`;\n      } else if (questionType === 2) {\n        this.question = `Was the album ${album} released as a full album or as a single?`;\n      } else if (questionType === 3) {\n        if (this.artistAlbumInfo.album[albumIdx].strLabel !== null) {\n          this.question = `What label was theie album ${album} released on?`;\n        } else {\n          this.createquestion(3);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAQA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,eAAe,EAAEC;EACnB,CAAC;EACDC,IAAI,EAAE,OAAO;IACXC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,GAAG;IACdC,WAAW,EAAE,GAAG;IAChBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAER,eAAe,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC;EACvC,CAAC,CAAC;EACFC,OAAO,GAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACC,MAAM,EAAEC,MAAM,EAAE;MACzB,IAAI,CAACC,KAAK,CAAC,SAAS,EAAEF,MAAM,EAAEC,MAAM;IACtC,CAAC;IACDE,YAAY,GAAG;MACb,IAAI,CAACD,KAAK,CAAC,WAAW;IACxB,CAAC;IACDE,WAAW,GAAG;MACZC,OAAO,CAACC,GAAG,CAAC,cAAc;IAC5B,CAAC;IACDT,cAAc,CAACU,SAAS,EAAE;MACxB,IAAIC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,IAAI,CAAC1B,eAAe,CAACS,KAAK,CAACkB,MAAM;MAC3E,IAAIlB,KAAI,GAAI,IAAI,CAACT,eAAe,CAACS,KAAK,CAACc,QAAQ,CAAC,CAACK,QAAO;MACxD,IAAIC,OAAM,GAAI,IAAI,CAAC7B,eAAe,CAACS,KAAK,CAACc,QAAQ,CAAC,CAACO,eAAc;MACjE,IAAIC,IAAG,GAAIF,OAAO,CAACG,QAAQ,EAAC;MAC5B,IAAIC,YAAW,GAAIT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAIJ,SAAS;MACvD,IAAIW,YAAW,KAAM,CAAC,EAAE;QACtB,IAAI,CAACX,SAAQ,GAAK,6BAA4Bb,KAAK,YAAW;MAChE,OAAO,IAAIwB,YAAW,KAAM,CAAC,EAAE;QAC7B,IAAI,CAAC3B,QAAO,GAAK,kBAAiB,IAAI,CAACE,UAAU,wBAAwBuB,IAAK,GAAC;MACjF,OAAO,IAAIE,YAAW,KAAM,CAAC,EAAE;QAC7B,IAAI,CAAC3B,QAAO,GAAK,iBAAgBG,KAAK,2CAA0C;MAClF,OAAO,IAAIwB,YAAW,KAAM,CAAC,EAAE;QAC7B,IAAI,IAAI,CAACjC,eAAe,CAACS,KAAK,CAACc,QAAQ,CAAC,CAACW,QAAO,KAAM,IAAI,EAAE;UAC1D,IAAI,CAAC5B,QAAO,GAAK,8BAA6BG,KAAK,eAAc;QACnE,OAAO;UACL,IAAI,CAAC0B,cAAc,CAAC,CAAC;QACvB;MACF;IACF;EACF;AACF","names":["name","props","artistAlbumInfo","Object","data","round_one","round_two","round_three","question","cur_answer","cur_artist","album","strArtist","mounted","createQuestion","methods","coreectAns","value1","value2","$emit","incorrectAns","checkAnswer","console","log","questions","albumIdx","Math","floor","random","length","strAlbum","yearInt","intYearReleased","year","toString","questionType","strLabel","createquestion"],"sourceRoot":"","sources":["/Users/jscarpelli/ga_seir919/projects/musical_pursuit/musicial_pursuit_front/musical_pursuit/src/components/GameComponents/Question.vue"],"sourcesContent":["<template>\n  <div>\n    <h2></h2>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'QuestionCard',\n  props: {\n    artistAlbumInfo: Object\n  },\n  data: () => ({\n    round_one: 50,\n    round_two: 100,\n    round_three: 150,\n    question: \"\",\n    cur_answer: \"\",\n    cur_artist: artistAlbumInfo.album[0].strArtist\n  }),\n  mounted() {\n    this.createQuestion(4)\n  },\n  methods: {\n    coreectAns(value1, value2) {\n      this.$emit('correct', value1, value2)\n    },\n    incorrectAns() {\n      this.$emit('incorrect')\n    },\n    checkAnswer() {\n      console.log('check answer')\n    },\n    createQuestion(questions) {\n      let albumIdx = Math.floor(Math.random() * this.artistAlbumInfo.album.length)\n      let album = this.artistAlbumInfo.album[albumIdx].strAlbum\n      let yearInt = this.artistAlbumInfo.album[albumIdx].intYearReleased\n      let year = yearInt.toString()\n      let questionType = Math.floor(Math.random() * questions)\n      if (questionType === 0) {\n        this.questions = `What year was their album ${album} released?`\n      } else if (questionType === 1) {\n        this.question = `What album did ${this.cur_artist} release in the year ${year}?`\n      } else if (questionType === 2) {\n        this.question = `Was the album ${album} released as a full album or as a single?`\n      } else if (questionType === 3) {\n        if (this.artistAlbumInfo.album[albumIdx].strLabel !== null) {\n          this.question = `What label was theie album ${album} released on?`\n        } else {\n          this.createquestion(3)\n        }\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}