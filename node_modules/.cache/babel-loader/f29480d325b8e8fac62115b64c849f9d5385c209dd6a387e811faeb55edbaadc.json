{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.VUE_APP_AUDIODB_KEY;\nimport Question from './Question.vue';\nexport default {\n  name: 'GameMain',\n  components: {\n    Question\n  },\n  mounted() {},\n  data: () => ({\n    searchQuery: \"\",\n    searchResults: {},\n    searched: false\n  }),\n  methods: {\n    async getAlbums(e) {\n      e.preventDefault();\n      const res = await axios.get(`https://theaudiodb.com/api/v1/json/${API_KEY}/searchalbum.php?s=${this.searchQuery}`);\n      this.searchResults = res;\n      this.searched = true;\n      console.log(res);\n    },\n    handleChange(event) {\n      this.searchQuery = event.target.value;\n    }\n  }\n};","map":{"version":3,"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAM;AACxB,MAAMC,OAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,mBAAkB;AAC9C,OAAOC,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAAEF;EAAS,CAAC;EACxBG,OAAO,GAAG,CAAE,CAAC;EACbC,IAAI,EAAE,OAAO;IACXC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,CAAC,CAAC;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,SAAS,CAACC,CAAC,EAAE;MACjBA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAMC,GAAE,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAE,sCAAqCjB,OAAQ,sBAAqB,IAAI,CAACS,WAAY,EAAC,CAAC;MAClH,IAAI,CAACC,aAAY,GAAIM,GAAG;MACxB,IAAI,CAACL,QAAO,GAAI,IAAG;MACnBO,OAAO,CAACC,GAAG,CAACH,GAAG;IACjB,CAAC;IACDI,YAAY,CAACC,KAAK,EAAE;MAClB,IAAI,CAACZ,WAAU,GAAIY,KAAK,CAACC,MAAM,CAACC,KAAI;IACtC;EAEF;AACF","names":["axios","API_KEY","process","env","VUE_APP_AUDIODB_KEY","Question","name","components","mounted","data","searchQuery","searchResults","searched","methods","getAlbums","e","preventDefault","res","get","console","log","handleChange","event","target","value"],"sourceRoot":"","sources":["/Users/jscarpelli/ga_seir919/projects/musical_pursuit/musicial_pursuit_front/musical_pursuit/src/components/GameComponents/GameMain.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"game-details\">\n      <h1 class=\"headline\">Get your rock brain ready!</h1>\n      <p class=\"game-ex\">RockDog Trivia works in rounds of 3 quetsions.<br />Search an rock or pop artist you think you\n        know, then answer 3 questions about their discography. Each question gets you points. If you answer all 3\n        correct you will increase your level. </p>\n    </div>\n    <div v-if=\"searched\" class=\"search\">\n      <form @submit=\"getAlbums\">\n        <input placeholder=\"Search Term\" @change=\"handleChange\" :value=\"searchQuery\" name=\"search\" type=\"text\" />\n        <button>Search</button>\n      </form>\n    </div>\n    <div v-else class=\"cur-artist\">\n      <h2>Get ready to answer questions about {{ searchResults[0].strArtist }}</h2>\n    </div>\n    <div class=\"questions\">\n      <Question />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nconst API_KEY = process.env.VUE_APP_AUDIODB_KEY\nimport Question from './Question.vue'\n\nexport default {\n  name: 'GameMain',\n  components: { Question },\n  mounted() { },\n  data: () => ({\n    searchQuery: \"\",\n    searchResults: {},\n    searched: false\n  }),\n  methods: {\n    async getAlbums(e) {\n      e.preventDefault();\n      const res = await axios.get(`https://theaudiodb.com/api/v1/json/${API_KEY}/searchalbum.php?s=${this.searchQuery}`);\n      this.searchResults = res;\n      this.searched = true\n      console.log(res)\n    },\n    handleChange(event) {\n      this.searchQuery = event.target.value\n    },\n\n  }\n}\n\n</script>\n\n<style>\n.game-details {\n  margin: 2vh 4vw;\n  box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.347);\n  border-radius: 10px;\n  background-color: rgba(240, 255, 255, 0.195);\n  padding: 2vw;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}