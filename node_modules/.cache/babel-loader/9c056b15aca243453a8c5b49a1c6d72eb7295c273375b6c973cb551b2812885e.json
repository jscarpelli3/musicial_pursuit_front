{"ast":null,"code":"import MdTableHead from './MdTableHead';\nexport default {\n  name: 'MdTableHeadSelection',\n  components: {\n    MdTableHead\n  },\n  inject: ['MdTable'],\n  computed: {\n    selectableCount() {\n      return Object.keys(this.selectable).length;\n    },\n    isDisabled() {\n      return !this.selectableCount;\n    },\n    selectable() {\n      return this.MdTable.selectable;\n    },\n    selectedItems() {\n      return this.MdTable.selectedItems;\n    },\n    allSelected() {\n      if (this.selectableCount === 0) {\n        return false;\n      }\n      return this.selectable.every(item => this.selectedItems.includes(item));\n    }\n  },\n  methods: {\n    onChange(val) {\n      if (val) {\n        this.MdTable.selectedItems = this.selectedItems.concat(this.selectable.filter(item => !this.selectedItems.includes(item)));\n      } else {\n        this.MdTable.selectedItems = this.selectedItems.filter(item => !this.selectable.includes(item));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AASE,OAAOA,WAAU,MAAO,eAAc;AAEtC,eAAe;EACbC,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,MAAM,EAAE,CAAC,SAAS,CAAC;EACnBC,QAAQ,EAAE;IACRC,eAAc,GAAK;MACjB,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,MAAK;IAC3C,CAAC;IACDC,UAAS,GAAK;MACZ,OAAO,CAAC,IAAI,CAACL,eAAc;IAC7B,CAAC;IACDG,UAAS,GAAK;MACZ,OAAO,IAAI,CAACG,OAAO,CAACH,UAAS;IAC/B,CAAC;IACDI,aAAY,GAAK;MACf,OAAO,IAAI,CAACD,OAAO,CAACC,aAAY;IAClC,CAAC;IACDC,WAAU,GAAK;MACb,IAAI,IAAI,CAACR,eAAc,KAAM,CAAC,EAAE;QAC9B,OAAO,KAAI;MACb;MAEA,OAAO,IAAI,CAACG,UAAU,CAACM,KAAK,CAACC,IAAG,IAAK,IAAI,CAACH,aAAa,CAACI,QAAQ,CAACD,IAAI,CAAC;IACxE;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,QAAO,CAAGC,GAAG,EAAE;MACb,IAAIA,GAAG,EAAE;QACP,IAAI,CAACR,OAAO,CAACC,aAAY,GAAI,IAAI,CAACA,aAAa,CAACQ,MAAM,CAAC,IAAI,CAACZ,UAAU,CAACa,MAAM,CAACN,IAAG,IAAK,CAAC,IAAI,CAACH,aAAa,CAACI,QAAQ,CAACD,IAAI,CAAC,CAAC;MAC3H,OAAO;QACL,IAAI,CAACJ,OAAO,CAACC,aAAY,GAAI,IAAI,CAACA,aAAa,CAACS,MAAM,CAACN,IAAG,IAAK,CAAC,IAAI,CAACP,UAAU,CAACQ,QAAQ,CAACD,IAAI,CAAC;MAChG;IACF;EACF;AACF","names":["MdTableHead","name","components","inject","computed","selectableCount","Object","keys","selectable","length","isDisabled","MdTable","selectedItems","allSelected","every","item","includes","methods","onChange","val","concat","filter"],"sourceRoot":"","sources":["/Users/jscarpelli/ga_seir919/projects/musical_pursuit/musicial_pursuit_front/musical_pursuit/src/components/MdTable/MdTableHeadSelection.vue"],"sourcesContent":["<template>\n  <md-table-head class=\"md-table-cell-selection\" v-if=\"selectableCount\">\n    <div class=\"md-table-cell-container\">\n      <md-checkbox :model=\"allSelected\" :disabled=\"isDisabled\" @change=\"onChange\" />\n    </div>\n  </md-table-head>\n</template>\n\n<script>\n  import MdTableHead from './MdTableHead'\n\n  export default {\n    name: 'MdTableHeadSelection',\n    components: {\n      MdTableHead\n    },\n    inject: ['MdTable'],\n    computed: {\n      selectableCount () {\n        return Object.keys(this.selectable).length\n      },\n      isDisabled () {\n        return !this.selectableCount\n      },\n      selectable () {\n        return this.MdTable.selectable\n      },\n      selectedItems () {\n        return this.MdTable.selectedItems\n      },\n      allSelected () {\n        if (this.selectableCount === 0) {\n          return false\n        }\n\n        return this.selectable.every(item => this.selectedItems.includes(item))\n      }\n    },\n    methods: {\n      onChange (val) {\n        if (val) {\n          this.MdTable.selectedItems = this.selectedItems.concat(this.selectable.filter(item => !this.selectedItems.includes(item)))\n        } else {\n          this.MdTable.selectedItems = this.selectedItems.filter(item => !this.selectable.includes(item))\n        }\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}